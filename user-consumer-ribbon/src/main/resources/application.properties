
#端口
server.port=9000

#服务名
spring.application.name=user-consumer-ribbon

#服务注册中心地址
eureka.client.service-url.defaultZone=http://api:node@localhost:8080/eureka

#禁用Eureka对Ribbon服务实例的维护实现
#ribbon.eureka.enabled=false

#开启重试机制
spring.cloud.loadbalancer.retry.enabled=true

#请求连接的超时时间
user-service.ribbon.ConnectTimeout=250
#请求处理的超时时间
user-service.ribbon.ReadTimeout=1000
#对所有操作请求都进行重试
user-service.ribbon.OkToRetryOnAllOperations=true
#切换实例的重试次数
user-service.ribbon.MaxAutoRetriesNextServer=2
#对当前实例的重试次数
user-service.ribbon.MaxAutoRetries=1

#设置HystrixCommand.run()执行的隔离策略，THREAD：通过线程池隔离的策略、SEMAPHORE：通过信号量隔离的策略
hystrix.command.default.execution.isolation.strategy=THREAD
#断路器的超时时间，需要大于Ribbon的超时时间，不然不会触发重试
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=5000
#配置HystrixCommand.run()的执行是否启用超时时间，如果设置为false，那么上一个配置将不再起作用
hystrix.command.default.execution.timeout.enabled=true
#配置当HystrixCommand.run()执行超时的时候是否要将它中断
hystrix.command.default.execution.isolation.thread.interruptOnTimeout=true
#配置当HystrixCommand.run()执行被取消的时候是否要将它中断
hystrix.command.default.execution.isolation.thread.interruptOnCancel=true
#当HystrixCommand的隔离策略使用信号量的时候，配置信号量的大小
hystrix.command.default.execution.isolation.semaphore.maxConcurrentRequests=10
#设置从调用线程中允许HystrixCommand.getFallback()方法执行的最大并发请求书
hystrix.command.default.fallback.isolation.semaphore.maxConcurrentRequests=10
#设置服务降级策略是否启用
hystrix.command.default.fallback.enabled=true
#确定当服务请求命令失败时，是否使用断路器来跟踪其健康指标和熔断请求
hystrix.command.default.circuitBreaker.enabled=true
#设置在滚动时间窗中，断路器熔断的最小请求数
hystrix.command.default.circuitBreaker.requestVolumeThreshold=20
#设置当断路器打开之后的休眠时间窗
hystrix.command.default.circuitBreaker.sleepWindowInMilliseconds=5000
#设置断路器打开的错误百分比条件
hystrix.command.default.circuitBreaker.errorThresholdPercentage=50
#如果设置为true，断路器将强制进入“打开”状态，拒绝所有请求
hystrix.command.default.circuitBreaker.forceOpen=false
#如果设置为true，断路器将强制进入“关闭”状态，接收所有请求，优先级低于上一个配置
hystrix.command.default.circuitBreaker.forceClosed=false
#设置滚动时间窗的长度
hystrix.command.default.metrics.rollingStats.timeInMilliseconds=10000
#设置滚动时间窗统计指标信息时划分“桶”的数量
hystrix.command.default.metrics.rollingStats.numBuckets=10
#设置对命令执行的延迟是否使用百分位数来跟踪和计算
hystrix.command.default.metrics.rollingPercentile.enabled=true
#设置百分位统计的滚动窗口的持续时间
hystrix.command.default.metrics.rollingPercentile.timeInMilliseconds=60000
#设置百分位统计滚动窗口中使用“桶”的数量
hystrix.command.default.metrics.rollingPercentile.numBuckets=6
#设置在执行过程中每个“桶”中保留的最大执行次数
hystrix.command.default.metrics.rollingPercentile.bucketSize=100
#设置采集影响断路器状态的健康快照的间隔等待时间
hystrix.command.default.metrics.healthSnapshot.intervalInMilliseconds=500
#配置是否开启请求缓存
hystrix.command.default.requestCache.enabled=true
#设置HystrixCommand的执行和事件是否打印日志到HystrixRequestLog中
hystrix.command.default.requestLog.enabled=true
#设置一次请求合并批处理中允许的最大请求数
hystrix.collapser.default.maxRequestsInBatch=Integer.MAX_VALUE
#设置批处理过程中每个命令延迟的时间
hystrix.collapser.default.timerDelayInMilliseconds=10
#设置批处理过程中是否开启请求缓存
hystrix.collapser.default.requestCache.enabled=true
#设置执行命令线程池的核心线程数
hystrix.threadpool.default.coreSize=10
#设置线程池的最大队列大小，当设置为-1时，将使用SynchronousQueue实现的队列，否则将使用LinkedBlockingQueue实现的队列
hystrix.threadpool.default.maxQueueSize=-1
#为队列设置拒绝阈值
hystrix.threadpool.default.queueSizeRejectionThreshold=5
#设置滚动时间窗的长度
hystrix.threadpool.default.metrics.rollingStats.timeInMilliseconds=10000
#设置滚动时间窗被划分成“桶”的数量
hystrix.threadpool.default.metrics.rollingStats.numBuckets=10